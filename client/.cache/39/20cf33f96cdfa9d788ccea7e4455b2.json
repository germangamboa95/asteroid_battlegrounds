{"id":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","dependencies":[{"name":"/Users/thegerman/Documents/asteroid_battlegrounds/client/package.json","includedInParent":true,"mtime":1569662305249},{"name":"/Users/thegerman/Documents/asteroid_battlegrounds/client/node_modules/@colyseus/schema/package.json","includedInParent":true,"mtime":1569656288742}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArraySchema = /** @class */ (function (_super) {\n    __extends(ArraySchema, _super);\n    // static get [Symbol.species](): any { return ArraySchema; }\n    function ArraySchema() {\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i] = arguments[_i];\n        }\n        var _this = _super.apply(this, items) || this;\n        Object.setPrototypeOf(_this, Object.create(ArraySchema.prototype));\n        Object.defineProperties(_this, {\n            $sorting: { value: undefined, enumerable: false, writable: true },\n            $changes: { value: undefined, enumerable: false, writable: true },\n            onAdd: { value: undefined, enumerable: false, writable: true },\n            onRemove: { value: undefined, enumerable: false, writable: true },\n            onChange: { value: undefined, enumerable: false, writable: true },\n            triggerAll: {\n                value: function () {\n                    if (!_this.onAdd) {\n                        return;\n                    }\n                    for (var i = 0; i < _this.length; i++) {\n                        _this.onAdd(_this[i], i);\n                    }\n                }\n            },\n            toJSON: {\n                value: function () {\n                    var arr = [];\n                    for (var i = 0; i < _this.length; i++) {\n                        var objAt = _this[i];\n                        arr.push((typeof (objAt.toJSON) === \"function\")\n                            ? objAt.toJSON()\n                            : objAt);\n                    }\n                    return arr;\n                }\n            },\n            clone: {\n                value: function (isDecoding) {\n                    var cloned;\n                    if (isDecoding) {\n                        cloned = new (ArraySchema.bind.apply(ArraySchema, [void 0].concat(_this)))();\n                        cloned.onAdd = _this.onAdd;\n                        cloned.onRemove = _this.onRemove;\n                        cloned.onChange = _this.onChange;\n                    }\n                    else {\n                        cloned = new (ArraySchema.bind.apply(ArraySchema, [void 0].concat(_this.map(function (item) {\n                            if (typeof (item) === \"object\") {\n                                return item.clone();\n                            }\n                            else {\n                                return item;\n                            }\n                        }))))();\n                    }\n                    return cloned;\n                }\n            }\n        });\n        return _this;\n    }\n    ArraySchema.prototype.sort = function (compareFn) {\n        this.$sorting = true;\n        _super.prototype.sort.call(this, compareFn);\n        var changes = this.$changes.changes;\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n            var key = changes_1[_i];\n            // track index change\n            var previousIndex = this.$changes.getIndex(this[key]);\n            if (previousIndex !== undefined) {\n                this.$changes.mapIndexChange(this[key], previousIndex);\n            }\n            this.$changes.mapIndex(this[key], key);\n        }\n        this.$sorting = false;\n        return this;\n    };\n    ArraySchema.prototype.filter = function (callbackfn, thisArg) {\n        var filtered = _super.prototype.filter.call(this, callbackfn);\n        // TODO: apply removed items on $changes\n        filtered.$changes = this.$changes;\n        return filtered;\n    };\n    ArraySchema.prototype.splice = function (start, deleteCount) {\n        var insert = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            insert[_i - 2] = arguments[_i];\n        }\n        var removedItems = Array.prototype.splice.apply(this, arguments);\n        var movedItems = Array.prototype.filter.call(this, function (item, idx) {\n            return idx >= start + deleteCount - 1;\n        });\n        removedItems.map(function (removedItem) {\n            // If the removed item is a schema we need to update it.\n            if (removedItem && removedItem.$changes) {\n                removedItem.$changes.parent.deleteIndex(removedItem);\n                removedItem.$changes.parent.deleteIndexChange(removedItem);\n                delete removedItem.$changes.parent;\n            }\n        });\n        movedItems.forEach(function (movedItem) {\n            // If the moved item is a schema we need to update it.\n            if (movedItem && movedItem.$changes) {\n                movedItem.$changes.parentField--;\n            }\n        });\n        return removedItems;\n    };\n    return ArraySchema;\n}(Array));\nexports.ArraySchema = ArraySchema;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@colyseus/schema/lib/types/ArraySchema.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}}],"sources":{"node_modules/@colyseus/schema/lib/types/ArraySchema.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ArraySchema = /** @class */ (function (_super) {\n    __extends(ArraySchema, _super);\n    // static get [Symbol.species](): any { return ArraySchema; }\n    function ArraySchema() {\n        var items = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            items[_i] = arguments[_i];\n        }\n        var _this = _super.apply(this, items) || this;\n        Object.setPrototypeOf(_this, Object.create(ArraySchema.prototype));\n        Object.defineProperties(_this, {\n            $sorting: { value: undefined, enumerable: false, writable: true },\n            $changes: { value: undefined, enumerable: false, writable: true },\n            onAdd: { value: undefined, enumerable: false, writable: true },\n            onRemove: { value: undefined, enumerable: false, writable: true },\n            onChange: { value: undefined, enumerable: false, writable: true },\n            triggerAll: {\n                value: function () {\n                    if (!_this.onAdd) {\n                        return;\n                    }\n                    for (var i = 0; i < _this.length; i++) {\n                        _this.onAdd(_this[i], i);\n                    }\n                }\n            },\n            toJSON: {\n                value: function () {\n                    var arr = [];\n                    for (var i = 0; i < _this.length; i++) {\n                        var objAt = _this[i];\n                        arr.push((typeof (objAt.toJSON) === \"function\")\n                            ? objAt.toJSON()\n                            : objAt);\n                    }\n                    return arr;\n                }\n            },\n            clone: {\n                value: function (isDecoding) {\n                    var cloned;\n                    if (isDecoding) {\n                        cloned = new (ArraySchema.bind.apply(ArraySchema, [void 0].concat(_this)))();\n                        cloned.onAdd = _this.onAdd;\n                        cloned.onRemove = _this.onRemove;\n                        cloned.onChange = _this.onChange;\n                    }\n                    else {\n                        cloned = new (ArraySchema.bind.apply(ArraySchema, [void 0].concat(_this.map(function (item) {\n                            if (typeof (item) === \"object\") {\n                                return item.clone();\n                            }\n                            else {\n                                return item;\n                            }\n                        }))))();\n                    }\n                    return cloned;\n                }\n            }\n        });\n        return _this;\n    }\n    ArraySchema.prototype.sort = function (compareFn) {\n        this.$sorting = true;\n        _super.prototype.sort.call(this, compareFn);\n        var changes = this.$changes.changes;\n        for (var _i = 0, changes_1 = changes; _i < changes_1.length; _i++) {\n            var key = changes_1[_i];\n            // track index change\n            var previousIndex = this.$changes.getIndex(this[key]);\n            if (previousIndex !== undefined) {\n                this.$changes.mapIndexChange(this[key], previousIndex);\n            }\n            this.$changes.mapIndex(this[key], key);\n        }\n        this.$sorting = false;\n        return this;\n    };\n    ArraySchema.prototype.filter = function (callbackfn, thisArg) {\n        var filtered = _super.prototype.filter.call(this, callbackfn);\n        // TODO: apply removed items on $changes\n        filtered.$changes = this.$changes;\n        return filtered;\n    };\n    ArraySchema.prototype.splice = function (start, deleteCount) {\n        var insert = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            insert[_i - 2] = arguments[_i];\n        }\n        var removedItems = Array.prototype.splice.apply(this, arguments);\n        var movedItems = Array.prototype.filter.call(this, function (item, idx) {\n            return idx >= start + deleteCount - 1;\n        });\n        removedItems.map(function (removedItem) {\n            // If the removed item is a schema we need to update it.\n            if (removedItem && removedItem.$changes) {\n                removedItem.$changes.parent.deleteIndex(removedItem);\n                removedItem.$changes.parent.deleteIndexChange(removedItem);\n                delete removedItem.$changes.parent;\n            }\n        });\n        movedItems.forEach(function (movedItem) {\n            // If the moved item is a schema we need to update it.\n            if (movedItem && movedItem.$changes) {\n                movedItem.$changes.parentField--;\n            }\n        });\n        return removedItems;\n    };\n    return ArraySchema;\n}(Array));\nexports.ArraySchema = ArraySchema;\n"},"lineCount":129}},"error":null,"hash":"6ebcc1f5b76f29092aa0c2cba07d7f05","cacheData":{"env":{}}}