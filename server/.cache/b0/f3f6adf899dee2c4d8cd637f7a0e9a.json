{"id":"../../node_modules/@colyseus/schema/lib/annotations.js","dependencies":[{"name":"/Users/thegerman/Documents/asteroid_battlegrounds/server/package.json","includedInParent":true,"mtime":1569690596100},{"name":"/Users/thegerman/Documents/asteroid_battlegrounds/server/node_modules/@colyseus/schema/package.json","includedInParent":true,"mtime":1569690632248},{"name":"./ChangeTree","loc":{"line":3,"column":27},"parent":"/Users/thegerman/Documents/asteroid_battlegrounds/server/node_modules/@colyseus/schema/lib/annotations.js","resolved":"/Users/thegerman/Documents/asteroid_battlegrounds/server/node_modules/@colyseus/schema/lib/ChangeTree.js"},{"name":"./Schema","loc":{"line":4,"column":23},"parent":"/Users/thegerman/Documents/asteroid_battlegrounds/server/node_modules/@colyseus/schema/lib/annotations.js","resolved":"/Users/thegerman/Documents/asteroid_battlegrounds/server/node_modules/@colyseus/schema/lib/Schema.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChangeTree_1 = require(\"./ChangeTree\");\nvar Schema_1 = require(\"./Schema\");\nvar Context = /** @class */ (function () {\n    function Context() {\n        this.types = {};\n        this.schemas = new Map();\n    }\n    Context.prototype.has = function (schema) {\n        return this.schemas.has(schema);\n    };\n    Context.prototype.get = function (typeid) {\n        return this.types[typeid];\n    };\n    Context.prototype.add = function (schema) {\n        schema._typeid = this.schemas.size;\n        this.types[schema._typeid] = schema;\n        this.schemas.set(schema, schema._typeid);\n    };\n    return Context;\n}());\nexports.Context = Context;\nexports.globalContext = new Context();\n/**\n * `@type()` decorator for proxies\n */\nfunction type(type, context) {\n    if (context === void 0) { context = exports.globalContext; }\n    return function (target, field) {\n        var constructor = target.constructor;\n        constructor._context = context;\n        /*\n         * static schema\n         */\n        if (!context.has(constructor)) {\n            context.add(constructor);\n            // support inheritance\n            constructor._schema = Object.assign({}, constructor._schema || {});\n            constructor._indexes = Object.assign({}, constructor._indexes || {});\n            constructor._descriptors = Object.assign({}, constructor._descriptors || {});\n        }\n        constructor._indexes[field] = Object.keys(constructor._schema).length;\n        constructor._schema[field] = type;\n        /**\n         * TODO: `isSchema` / `isArray` / `isMap` is repeated on many places!\n         * need to refactor all of them.\n         */\n        var isArray = Array.isArray(type);\n        var isMap = !isArray && type.map;\n        var isSchema = (typeof (constructor._schema[field]) === \"function\");\n        var fieldCached = \"_\" + field;\n        constructor._descriptors[fieldCached] = {\n            enumerable: false,\n            configurable: false,\n            writable: true,\n        };\n        constructor._descriptors[field] = {\n            get: function () {\n                return this[fieldCached];\n            },\n            set: function (value) {\n                /**\n                 * Create Proxy for array or map items\n                 */\n                if (isArray || isMap) {\n                    value = new Proxy(value, {\n                        get: function (obj, prop) { return obj[prop]; },\n                        set: function (obj, prop, setValue) {\n                            if (prop !== \"length\" && prop.indexOf(\"$\") !== 0) {\n                                // ensure new value has a parent\n                                var key = (isArray) ? Number(prop) : String(prop);\n                                if (!obj.$sorting) {\n                                    // track index change\n                                    var previousIndex = obj.$changes.getIndex(setValue);\n                                    if (previousIndex !== undefined) {\n                                        obj.$changes.mapIndexChange(setValue, previousIndex);\n                                    }\n                                    obj.$changes.mapIndex(setValue, key);\n                                }\n                                // if (isMap) {\n                                //     obj._indexes.delete(prop);\n                                // }\n                                if (setValue instanceof Schema_1.Schema) {\n                                    // new items are flagged with all changes\n                                    if (!setValue.$changes.parent) {\n                                        setValue.$changes = new ChangeTree_1.ChangeTree(key, obj.$changes);\n                                        setValue.$changes.changeAll(setValue);\n                                    }\n                                }\n                                else {\n                                    obj[prop] = setValue;\n                                }\n                                // apply change on ArraySchema / MapSchema\n                                obj.$changes.change(key);\n                            }\n                            else if (setValue !== obj[prop]) {\n                                // console.log(\"SET NEW LENGTH:\", setValue);\n                                // console.log(\"PREVIOUS LENGTH: \", obj[prop]);\n                            }\n                            obj[prop] = setValue;\n                            return true;\n                        },\n                        deleteProperty: function (obj, prop) {\n                            var deletedValue = obj[prop];\n                            if (isMap && deletedValue !== undefined) {\n                                obj.$changes.deleteIndex(deletedValue);\n                                obj.$changes.deleteIndexChange(deletedValue);\n                                if (deletedValue.$changes) { // deletedValue may be a primitive value\n                                    delete deletedValue.$changes.parent;\n                                }\n                                // obj._indexes.delete(prop);\n                            }\n                            delete obj[prop];\n                            var key = (isArray) ? Number(prop) : String(prop);\n                            obj.$changes.change(key, true);\n                            return true;\n                        },\n                    });\n                }\n                // skip if value is the same as cached.\n                if (value === this[fieldCached]) {\n                    return;\n                }\n                this[fieldCached] = value;\n                if (isArray) {\n                    // directly assigning an array of items as value.\n                    this.$changes.change(field);\n                    value.$changes = new ChangeTree_1.ChangeTree(field, this.$changes);\n                    for (var i = 0; i < value.length; i++) {\n                        if (value[i] instanceof Schema_1.Schema) {\n                            value[i].$changes = new ChangeTree_1.ChangeTree(i, value.$changes);\n                            value[i].$changes.changeAll(value[i]);\n                        }\n                        value.$changes.mapIndex(value[i], i);\n                        value.$changes.change(i);\n                    }\n                }\n                else if (isMap) {\n                    // directly assigning a map\n                    value.$changes = new ChangeTree_1.ChangeTree(field, this.$changes);\n                    this.$changes.change(field);\n                    for (var key in value) {\n                        if (value[key] instanceof Schema_1.Schema) {\n                            value[key].$changes = new ChangeTree_1.ChangeTree(key, value.$changes);\n                            value[key].$changes.changeAll(value[key]);\n                        }\n                        value.$changes.mapIndex(value[key], key);\n                        value.$changes.change(key);\n                    }\n                }\n                else if (isSchema) {\n                    // directly assigning a `Schema` object\n                    // value may be set to null\n                    this.$changes.change(field);\n                    if (value) {\n                        value.$changes = new ChangeTree_1.ChangeTree(field, this.$changes);\n                        value.$changes.changeAll(value);\n                    }\n                }\n                else {\n                    // directly assigning a primitive type\n                    this.$changes.change(field);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        };\n    };\n}\nexports.type = type;\n/**\n * `@filter()` decorator for defining data filters per client\n */\nfunction filter(cb) {\n    return function (target, field) {\n        var constructor = target.constructor;\n        /*\n        * static filters\n        */\n        if (!constructor._filters) {\n            constructor._filters = {};\n        }\n        constructor._filters[field] = cb;\n    };\n}\nexports.filter = filter;\nfunction defineTypes(target, fields) {\n    for (var field in fields) {\n        type(fields[field])(target.prototype, field);\n    }\n    return target;\n}\nexports.defineTypes = defineTypes;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/annotations.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}}],"sources":{"../../node_modules/@colyseus/schema/lib/annotations.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ChangeTree_1 = require(\"./ChangeTree\");\nvar Schema_1 = require(\"./Schema\");\nvar Context = /** @class */ (function () {\n    function Context() {\n        this.types = {};\n        this.schemas = new Map();\n    }\n    Context.prototype.has = function (schema) {\n        return this.schemas.has(schema);\n    };\n    Context.prototype.get = function (typeid) {\n        return this.types[typeid];\n    };\n    Context.prototype.add = function (schema) {\n        schema._typeid = this.schemas.size;\n        this.types[schema._typeid] = schema;\n        this.schemas.set(schema, schema._typeid);\n    };\n    return Context;\n}());\nexports.Context = Context;\nexports.globalContext = new Context();\n/**\n * `@type()` decorator for proxies\n */\nfunction type(type, context) {\n    if (context === void 0) { context = exports.globalContext; }\n    return function (target, field) {\n        var constructor = target.constructor;\n        constructor._context = context;\n        /*\n         * static schema\n         */\n        if (!context.has(constructor)) {\n            context.add(constructor);\n            // support inheritance\n            constructor._schema = Object.assign({}, constructor._schema || {});\n            constructor._indexes = Object.assign({}, constructor._indexes || {});\n            constructor._descriptors = Object.assign({}, constructor._descriptors || {});\n        }\n        constructor._indexes[field] = Object.keys(constructor._schema).length;\n        constructor._schema[field] = type;\n        /**\n         * TODO: `isSchema` / `isArray` / `isMap` is repeated on many places!\n         * need to refactor all of them.\n         */\n        var isArray = Array.isArray(type);\n        var isMap = !isArray && type.map;\n        var isSchema = (typeof (constructor._schema[field]) === \"function\");\n        var fieldCached = \"_\" + field;\n        constructor._descriptors[fieldCached] = {\n            enumerable: false,\n            configurable: false,\n            writable: true,\n        };\n        constructor._descriptors[field] = {\n            get: function () {\n                return this[fieldCached];\n            },\n            set: function (value) {\n                /**\n                 * Create Proxy for array or map items\n                 */\n                if (isArray || isMap) {\n                    value = new Proxy(value, {\n                        get: function (obj, prop) { return obj[prop]; },\n                        set: function (obj, prop, setValue) {\n                            if (prop !== \"length\" && prop.indexOf(\"$\") !== 0) {\n                                // ensure new value has a parent\n                                var key = (isArray) ? Number(prop) : String(prop);\n                                if (!obj.$sorting) {\n                                    // track index change\n                                    var previousIndex = obj.$changes.getIndex(setValue);\n                                    if (previousIndex !== undefined) {\n                                        obj.$changes.mapIndexChange(setValue, previousIndex);\n                                    }\n                                    obj.$changes.mapIndex(setValue, key);\n                                }\n                                // if (isMap) {\n                                //     obj._indexes.delete(prop);\n                                // }\n                                if (setValue instanceof Schema_1.Schema) {\n                                    // new items are flagged with all changes\n                                    if (!setValue.$changes.parent) {\n                                        setValue.$changes = new ChangeTree_1.ChangeTree(key, obj.$changes);\n                                        setValue.$changes.changeAll(setValue);\n                                    }\n                                }\n                                else {\n                                    obj[prop] = setValue;\n                                }\n                                // apply change on ArraySchema / MapSchema\n                                obj.$changes.change(key);\n                            }\n                            else if (setValue !== obj[prop]) {\n                                // console.log(\"SET NEW LENGTH:\", setValue);\n                                // console.log(\"PREVIOUS LENGTH: \", obj[prop]);\n                            }\n                            obj[prop] = setValue;\n                            return true;\n                        },\n                        deleteProperty: function (obj, prop) {\n                            var deletedValue = obj[prop];\n                            if (isMap && deletedValue !== undefined) {\n                                obj.$changes.deleteIndex(deletedValue);\n                                obj.$changes.deleteIndexChange(deletedValue);\n                                if (deletedValue.$changes) { // deletedValue may be a primitive value\n                                    delete deletedValue.$changes.parent;\n                                }\n                                // obj._indexes.delete(prop);\n                            }\n                            delete obj[prop];\n                            var key = (isArray) ? Number(prop) : String(prop);\n                            obj.$changes.change(key, true);\n                            return true;\n                        },\n                    });\n                }\n                // skip if value is the same as cached.\n                if (value === this[fieldCached]) {\n                    return;\n                }\n                this[fieldCached] = value;\n                if (isArray) {\n                    // directly assigning an array of items as value.\n                    this.$changes.change(field);\n                    value.$changes = new ChangeTree_1.ChangeTree(field, this.$changes);\n                    for (var i = 0; i < value.length; i++) {\n                        if (value[i] instanceof Schema_1.Schema) {\n                            value[i].$changes = new ChangeTree_1.ChangeTree(i, value.$changes);\n                            value[i].$changes.changeAll(value[i]);\n                        }\n                        value.$changes.mapIndex(value[i], i);\n                        value.$changes.change(i);\n                    }\n                }\n                else if (isMap) {\n                    // directly assigning a map\n                    value.$changes = new ChangeTree_1.ChangeTree(field, this.$changes);\n                    this.$changes.change(field);\n                    for (var key in value) {\n                        if (value[key] instanceof Schema_1.Schema) {\n                            value[key].$changes = new ChangeTree_1.ChangeTree(key, value.$changes);\n                            value[key].$changes.changeAll(value[key]);\n                        }\n                        value.$changes.mapIndex(value[key], key);\n                        value.$changes.change(key);\n                    }\n                }\n                else if (isSchema) {\n                    // directly assigning a `Schema` object\n                    // value may be set to null\n                    this.$changes.change(field);\n                    if (value) {\n                        value.$changes = new ChangeTree_1.ChangeTree(field, this.$changes);\n                        value.$changes.changeAll(value);\n                    }\n                }\n                else {\n                    // directly assigning a primitive type\n                    this.$changes.change(field);\n                }\n            },\n            enumerable: true,\n            configurable: true\n        };\n    };\n}\nexports.type = type;\n/**\n * `@filter()` decorator for defining data filters per client\n */\nfunction filter(cb) {\n    return function (target, field) {\n        var constructor = target.constructor;\n        /*\n        * static filters\n        */\n        if (!constructor._filters) {\n            constructor._filters = {};\n        }\n        constructor._filters[field] = cb;\n    };\n}\nexports.filter = filter;\nfunction defineTypes(target, fields) {\n    for (var field in fields) {\n        type(fields[field])(target.prototype, field);\n    }\n    return target;\n}\nexports.defineTypes = defineTypes;\n"},"lineCount":195}},"error":null,"hash":"74d9b95c9edaea276f01845ae56151e4","cacheData":{"env":{}}}