{"id":"../../node_modules/@colyseus/schema/lib/Reflection.js","dependencies":[{"name":"/Users/thegerman/Documents/asteroid_battlegrounds/server/package.json","includedInParent":true,"mtime":1569678270061},{"name":"/Users/thegerman/Documents/asteroid_battlegrounds/server/node_modules/@colyseus/schema/package.json","includedInParent":true,"mtime":1569656170843},{"name":"./annotations","loc":{"line":22,"column":28},"parent":"/Users/thegerman/Documents/asteroid_battlegrounds/server/node_modules/@colyseus/schema/lib/Reflection.js","resolved":"/Users/thegerman/Documents/asteroid_battlegrounds/server/node_modules/@colyseus/schema/lib/annotations.js"},{"name":"./Schema","loc":{"line":23,"column":23},"parent":"/Users/thegerman/Documents/asteroid_battlegrounds/server/node_modules/@colyseus/schema/lib/Reflection.js","resolved":"/Users/thegerman/Documents/asteroid_battlegrounds/server/node_modules/@colyseus/schema/lib/Schema.js"},{"name":"./types/ArraySchema","loc":{"line":24,"column":28},"parent":"/Users/thegerman/Documents/asteroid_battlegrounds/server/node_modules/@colyseus/schema/lib/Reflection.js","resolved":"/Users/thegerman/Documents/asteroid_battlegrounds/server/node_modules/@colyseus/schema/lib/types/ArraySchema.js"},{"name":"./types/MapSchema","loc":{"line":25,"column":26},"parent":"/Users/thegerman/Documents/asteroid_battlegrounds/server/node_modules/@colyseus/schema/lib/Reflection.js","resolved":"/Users/thegerman/Documents/asteroid_battlegrounds/server/node_modules/@colyseus/schema/lib/types/MapSchema.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar annotations_1 = require(\"./annotations\");\nvar Schema_1 = require(\"./Schema\");\nvar ArraySchema_1 = require(\"./types/ArraySchema\");\nvar MapSchema_1 = require(\"./types/MapSchema\");\nvar reflectionContext = new annotations_1.Context();\n/**\n * Reflection\n */\nvar ReflectionField = /** @class */ (function (_super) {\n    __extends(ReflectionField, _super);\n    function ReflectionField() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        annotations_1.type(\"string\", reflectionContext)\n    ], ReflectionField.prototype, \"name\", void 0);\n    __decorate([\n        annotations_1.type(\"string\", reflectionContext)\n    ], ReflectionField.prototype, \"type\", void 0);\n    __decorate([\n        annotations_1.type(\"uint8\", reflectionContext)\n    ], ReflectionField.prototype, \"referencedType\", void 0);\n    return ReflectionField;\n}(Schema_1.Schema));\nexports.ReflectionField = ReflectionField;\nvar ReflectionType = /** @class */ (function (_super) {\n    __extends(ReflectionType, _super);\n    function ReflectionType() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.fields = new ArraySchema_1.ArraySchema();\n        return _this;\n    }\n    __decorate([\n        annotations_1.type(\"uint8\", reflectionContext)\n    ], ReflectionType.prototype, \"id\", void 0);\n    __decorate([\n        annotations_1.type([ReflectionField], reflectionContext)\n    ], ReflectionType.prototype, \"fields\", void 0);\n    return ReflectionType;\n}(Schema_1.Schema));\nexports.ReflectionType = ReflectionType;\nvar Reflection = /** @class */ (function (_super) {\n    __extends(Reflection, _super);\n    function Reflection() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.types = new ArraySchema_1.ArraySchema();\n        return _this;\n    }\n    Reflection.encode = function (instance) {\n        var rootSchemaType = instance.constructor;\n        var reflection = new Reflection();\n        reflection.rootType = rootSchemaType._typeid;\n        var buildType = function (currentType, schema) {\n            for (var fieldName in schema) {\n                var field = new ReflectionField();\n                field.name = fieldName;\n                var fieldType = void 0;\n                if (typeof (schema[fieldName]) === \"string\") {\n                    fieldType = schema[fieldName];\n                }\n                else {\n                    var isSchema = typeof (schema[fieldName]) === \"function\";\n                    var isArray = Array.isArray(schema[fieldName]);\n                    var isMap = !isArray && schema[fieldName].map;\n                    var childTypeSchema = void 0;\n                    if (isSchema) {\n                        fieldType = \"ref\";\n                        childTypeSchema = schema[fieldName];\n                    }\n                    else if (isArray) {\n                        fieldType = \"array\";\n                        if (typeof (schema[fieldName][0]) === \"string\") {\n                            fieldType += \":\" + schema[fieldName][0]; // array:string\n                        }\n                        else {\n                            childTypeSchema = schema[fieldName][0];\n                        }\n                    }\n                    else if (isMap) {\n                        fieldType = \"map\";\n                        if (typeof (schema[fieldName].map) === \"string\") {\n                            fieldType += \":\" + schema[fieldName].map; // array:string\n                        }\n                        else {\n                            childTypeSchema = schema[fieldName].map;\n                        }\n                    }\n                    field.referencedType = (childTypeSchema)\n                        ? childTypeSchema._typeid\n                        : 255;\n                }\n                field.type = fieldType;\n                currentType.fields.push(field);\n            }\n            reflection.types.push(currentType);\n        };\n        var types = rootSchemaType._context.types;\n        for (var typeid in types) {\n            var type_1 = new ReflectionType();\n            type_1.id = Number(typeid);\n            buildType(type_1, types[typeid]._schema);\n        }\n        return reflection.encodeAll();\n    };\n    Reflection.decode = function (bytes) {\n        var context = new annotations_1.Context();\n        var reflection = new Reflection();\n        reflection.decode(bytes);\n        var schemaTypes = reflection.types.reduce(function (types, reflectionType) {\n            types[reflectionType.id] = /** @class */ (function (_super) {\n                __extends(_, _super);\n                function _() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return _;\n            }(Schema_1.Schema));\n            return types;\n        }, {});\n        reflection.types.forEach(function (reflectionType, i) {\n            reflectionType.fields.forEach(function (field) {\n                var schemaType = schemaTypes[reflectionType.id];\n                if (field.referencedType !== undefined) {\n                    var refType = schemaTypes[field.referencedType];\n                    // map or array of primitive type (255)\n                    if (!refType) {\n                        refType = field.type.split(\":\")[1];\n                    }\n                    if (field.type.indexOf(\"array\") === 0) {\n                        annotations_1.type([refType], context)(schemaType.prototype, field.name);\n                    }\n                    else if (field.type.indexOf(\"map\") === 0) {\n                        annotations_1.type({ map: refType }, context)(schemaType.prototype, field.name);\n                    }\n                    else if (field.type === \"ref\") {\n                        annotations_1.type(refType, context)(schemaType.prototype, field.name);\n                    }\n                }\n                else {\n                    annotations_1.type(field.type, context)(schemaType.prototype, field.name);\n                }\n            });\n        });\n        var rootType = schemaTypes[reflection.rootType];\n        var rootInstance = new rootType();\n        /**\n         * auto-initialize referenced types on root type\n         * to allow registering listeners immediatelly on client-side\n         */\n        for (var fieldName in rootType._schema) {\n            var fieldType = rootType._schema[fieldName];\n            if (typeof (fieldType) !== \"string\") {\n                var isSchema = typeof (fieldType) === \"function\";\n                var isArray = Array.isArray(fieldType);\n                var isMap = !isArray && fieldType.map;\n                rootInstance[fieldName] = (isArray)\n                    ? new ArraySchema_1.ArraySchema()\n                    : (isMap)\n                        ? new MapSchema_1.MapSchema()\n                        : (isSchema)\n                            ? new fieldType()\n                            : undefined;\n            }\n        }\n        return rootInstance;\n    };\n    __decorate([\n        annotations_1.type([ReflectionType], reflectionContext)\n    ], Reflection.prototype, \"types\", void 0);\n    __decorate([\n        annotations_1.type(\"uint8\", reflectionContext)\n    ], Reflection.prototype, \"rootType\", void 0);\n    return Reflection;\n}(Schema_1.Schema));\nexports.Reflection = Reflection;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/Reflection.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}}],"sources":{"../../node_modules/@colyseus/schema/lib/Reflection.js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar annotations_1 = require(\"./annotations\");\nvar Schema_1 = require(\"./Schema\");\nvar ArraySchema_1 = require(\"./types/ArraySchema\");\nvar MapSchema_1 = require(\"./types/MapSchema\");\nvar reflectionContext = new annotations_1.Context();\n/**\n * Reflection\n */\nvar ReflectionField = /** @class */ (function (_super) {\n    __extends(ReflectionField, _super);\n    function ReflectionField() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        annotations_1.type(\"string\", reflectionContext)\n    ], ReflectionField.prototype, \"name\", void 0);\n    __decorate([\n        annotations_1.type(\"string\", reflectionContext)\n    ], ReflectionField.prototype, \"type\", void 0);\n    __decorate([\n        annotations_1.type(\"uint8\", reflectionContext)\n    ], ReflectionField.prototype, \"referencedType\", void 0);\n    return ReflectionField;\n}(Schema_1.Schema));\nexports.ReflectionField = ReflectionField;\nvar ReflectionType = /** @class */ (function (_super) {\n    __extends(ReflectionType, _super);\n    function ReflectionType() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.fields = new ArraySchema_1.ArraySchema();\n        return _this;\n    }\n    __decorate([\n        annotations_1.type(\"uint8\", reflectionContext)\n    ], ReflectionType.prototype, \"id\", void 0);\n    __decorate([\n        annotations_1.type([ReflectionField], reflectionContext)\n    ], ReflectionType.prototype, \"fields\", void 0);\n    return ReflectionType;\n}(Schema_1.Schema));\nexports.ReflectionType = ReflectionType;\nvar Reflection = /** @class */ (function (_super) {\n    __extends(Reflection, _super);\n    function Reflection() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.types = new ArraySchema_1.ArraySchema();\n        return _this;\n    }\n    Reflection.encode = function (instance) {\n        var rootSchemaType = instance.constructor;\n        var reflection = new Reflection();\n        reflection.rootType = rootSchemaType._typeid;\n        var buildType = function (currentType, schema) {\n            for (var fieldName in schema) {\n                var field = new ReflectionField();\n                field.name = fieldName;\n                var fieldType = void 0;\n                if (typeof (schema[fieldName]) === \"string\") {\n                    fieldType = schema[fieldName];\n                }\n                else {\n                    var isSchema = typeof (schema[fieldName]) === \"function\";\n                    var isArray = Array.isArray(schema[fieldName]);\n                    var isMap = !isArray && schema[fieldName].map;\n                    var childTypeSchema = void 0;\n                    if (isSchema) {\n                        fieldType = \"ref\";\n                        childTypeSchema = schema[fieldName];\n                    }\n                    else if (isArray) {\n                        fieldType = \"array\";\n                        if (typeof (schema[fieldName][0]) === \"string\") {\n                            fieldType += \":\" + schema[fieldName][0]; // array:string\n                        }\n                        else {\n                            childTypeSchema = schema[fieldName][0];\n                        }\n                    }\n                    else if (isMap) {\n                        fieldType = \"map\";\n                        if (typeof (schema[fieldName].map) === \"string\") {\n                            fieldType += \":\" + schema[fieldName].map; // array:string\n                        }\n                        else {\n                            childTypeSchema = schema[fieldName].map;\n                        }\n                    }\n                    field.referencedType = (childTypeSchema)\n                        ? childTypeSchema._typeid\n                        : 255;\n                }\n                field.type = fieldType;\n                currentType.fields.push(field);\n            }\n            reflection.types.push(currentType);\n        };\n        var types = rootSchemaType._context.types;\n        for (var typeid in types) {\n            var type_1 = new ReflectionType();\n            type_1.id = Number(typeid);\n            buildType(type_1, types[typeid]._schema);\n        }\n        return reflection.encodeAll();\n    };\n    Reflection.decode = function (bytes) {\n        var context = new annotations_1.Context();\n        var reflection = new Reflection();\n        reflection.decode(bytes);\n        var schemaTypes = reflection.types.reduce(function (types, reflectionType) {\n            types[reflectionType.id] = /** @class */ (function (_super) {\n                __extends(_, _super);\n                function _() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return _;\n            }(Schema_1.Schema));\n            return types;\n        }, {});\n        reflection.types.forEach(function (reflectionType, i) {\n            reflectionType.fields.forEach(function (field) {\n                var schemaType = schemaTypes[reflectionType.id];\n                if (field.referencedType !== undefined) {\n                    var refType = schemaTypes[field.referencedType];\n                    // map or array of primitive type (255)\n                    if (!refType) {\n                        refType = field.type.split(\":\")[1];\n                    }\n                    if (field.type.indexOf(\"array\") === 0) {\n                        annotations_1.type([refType], context)(schemaType.prototype, field.name);\n                    }\n                    else if (field.type.indexOf(\"map\") === 0) {\n                        annotations_1.type({ map: refType }, context)(schemaType.prototype, field.name);\n                    }\n                    else if (field.type === \"ref\") {\n                        annotations_1.type(refType, context)(schemaType.prototype, field.name);\n                    }\n                }\n                else {\n                    annotations_1.type(field.type, context)(schemaType.prototype, field.name);\n                }\n            });\n        });\n        var rootType = schemaTypes[reflection.rootType];\n        var rootInstance = new rootType();\n        /**\n         * auto-initialize referenced types on root type\n         * to allow registering listeners immediatelly on client-side\n         */\n        for (var fieldName in rootType._schema) {\n            var fieldType = rootType._schema[fieldName];\n            if (typeof (fieldType) !== \"string\") {\n                var isSchema = typeof (fieldType) === \"function\";\n                var isArray = Array.isArray(fieldType);\n                var isMap = !isArray && fieldType.map;\n                rootInstance[fieldName] = (isArray)\n                    ? new ArraySchema_1.ArraySchema()\n                    : (isMap)\n                        ? new MapSchema_1.MapSchema()\n                        : (isSchema)\n                            ? new fieldType()\n                            : undefined;\n            }\n        }\n        return rootInstance;\n    };\n    __decorate([\n        annotations_1.type([ReflectionType], reflectionContext)\n    ], Reflection.prototype, \"types\", void 0);\n    __decorate([\n        annotations_1.type(\"uint8\", reflectionContext)\n    ], Reflection.prototype, \"rootType\", void 0);\n    return Reflection;\n}(Schema_1.Schema));\nexports.Reflection = Reflection;\n"},"lineCount":196}},"error":null,"hash":"6010a0d15a94ad8d29628ee30e78d8c2","cacheData":{"env":{}}}