{"id":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","dependencies":[{"name":"/Users/thegerman/Documents/asteroid_battlegrounds/server/package.json","includedInParent":true,"mtime":1569690596100},{"name":"/Users/thegerman/Documents/asteroid_battlegrounds/server/node_modules/@colyseus/schema/package.json","includedInParent":true,"mtime":1569690632248}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MapSchema = /** @class */ (function () {\n    function MapSchema(obj) {\n        var _this = this;\n        if (obj === void 0) { obj = {}; }\n        for (var key in obj) {\n            this[key] = obj[key];\n        }\n        Object.defineProperties(this, {\n            $changes: { value: undefined, enumerable: false, writable: true },\n            onAdd: { value: undefined, enumerable: false, writable: true },\n            onRemove: { value: undefined, enumerable: false, writable: true },\n            onChange: { value: undefined, enumerable: false, writable: true },\n            clone: {\n                value: function (isDecoding) {\n                    var cloned;\n                    if (isDecoding) {\n                        // client-side\n                        cloned = Object.assign(new MapSchema(), _this);\n                        cloned.onAdd = _this.onAdd;\n                        cloned.onRemove = _this.onRemove;\n                        cloned.onChange = _this.onChange;\n                    }\n                    else {\n                        // server-side\n                        var cloned_1 = new MapSchema();\n                        for (var key in _this) {\n                            if (typeof (_this[key]) === \"object\") {\n                                cloned_1[key] = _this[key].clone();\n                            }\n                            else {\n                                cloned_1[key] = _this[key];\n                            }\n                        }\n                    }\n                    return cloned;\n                }\n            },\n            triggerAll: {\n                value: function () {\n                    if (!_this.onAdd) {\n                        return;\n                    }\n                    for (var key in _this) {\n                        _this.onAdd(_this[key], key);\n                    }\n                }\n            },\n            toJSON: {\n                value: function () {\n                    var map = {};\n                    for (var key in _this) {\n                        map[key] = (typeof (_this[key].toJSON) === \"function\")\n                            ? _this[key].toJSON()\n                            : _this[key];\n                    }\n                    return map;\n                }\n            },\n            _indexes: { value: new Map(), enumerable: false, writable: true },\n            _updateIndexes: {\n                value: function () {\n                    var index = 0;\n                    var indexes = new Map();\n                    for (var key in _this) {\n                        indexes.set(key, index++);\n                    }\n                    _this._indexes = indexes;\n                }\n            },\n        });\n    }\n    return MapSchema;\n}());\nexports.MapSchema = MapSchema;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../node_modules/@colyseus/schema/lib/types/MapSchema.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}}],"sources":{"../../node_modules/@colyseus/schema/lib/types/MapSchema.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar MapSchema = /** @class */ (function () {\n    function MapSchema(obj) {\n        var _this = this;\n        if (obj === void 0) { obj = {}; }\n        for (var key in obj) {\n            this[key] = obj[key];\n        }\n        Object.defineProperties(this, {\n            $changes: { value: undefined, enumerable: false, writable: true },\n            onAdd: { value: undefined, enumerable: false, writable: true },\n            onRemove: { value: undefined, enumerable: false, writable: true },\n            onChange: { value: undefined, enumerable: false, writable: true },\n            clone: {\n                value: function (isDecoding) {\n                    var cloned;\n                    if (isDecoding) {\n                        // client-side\n                        cloned = Object.assign(new MapSchema(), _this);\n                        cloned.onAdd = _this.onAdd;\n                        cloned.onRemove = _this.onRemove;\n                        cloned.onChange = _this.onChange;\n                    }\n                    else {\n                        // server-side\n                        var cloned_1 = new MapSchema();\n                        for (var key in _this) {\n                            if (typeof (_this[key]) === \"object\") {\n                                cloned_1[key] = _this[key].clone();\n                            }\n                            else {\n                                cloned_1[key] = _this[key];\n                            }\n                        }\n                    }\n                    return cloned;\n                }\n            },\n            triggerAll: {\n                value: function () {\n                    if (!_this.onAdd) {\n                        return;\n                    }\n                    for (var key in _this) {\n                        _this.onAdd(_this[key], key);\n                    }\n                }\n            },\n            toJSON: {\n                value: function () {\n                    var map = {};\n                    for (var key in _this) {\n                        map[key] = (typeof (_this[key].toJSON) === \"function\")\n                            ? _this[key].toJSON()\n                            : _this[key];\n                    }\n                    return map;\n                }\n            },\n            _indexes: { value: new Map(), enumerable: false, writable: true },\n            _updateIndexes: {\n                value: function () {\n                    var index = 0;\n                    var indexes = new Map();\n                    for (var key in _this) {\n                        indexes.set(key, index++);\n                    }\n                    _this._indexes = indexes;\n                }\n            },\n        });\n    }\n    return MapSchema;\n}());\nexports.MapSchema = MapSchema;\n"},"lineCount":77}},"error":null,"hash":"58634406df951c79b22085eefdaf5823","cacheData":{"env":{}}}